<%@ MasterClass="Bacularis\API\Layouts\Wizard" Theme="Baculum-v2"%>
<com:TContent ID="Wizard">
	<com:TWizard
		ID="InstallWizard"
		CssClass="wizard"
		StepStyle.CssClass="w3-container"
		HeaderStyle.CssClass="w3-container"
		NavigationStyle.CssClass="w3-container"
		UseDefaultLayout="false"
		ShowSideBar="false"
		OnNextButtonClick="wizardNext"
		OnCancelButtonClick="wizardStop"
		OnCompleteButtonClick="wizardCompleted"
		>
		<prop:HeaderTemplate>
			<div class="w3-half">
				<div class="w3-third w3-padding-16 w3-hide-small">
					<div class="step w3-padding w3-text-white w3-margin-right <%=($this->Parent->ActiveStepIndex === 0 ? 'w3-light-green' : 'w3-green')%>">
						<div class="w3-left"><i class="fa fa-magic w3-xxlarge"></i></div>
						<div class="w3-clear"></div>
						<h4><com:TTranslate Text="General" /></h4>
					</div>
				</div>
				<div class="w3-third w3-padding-16 w3-hide-small">
					<div class="step w3-padding w3-text-white w3-margin-right <%=($this->Parent->ActiveStepIndex === 1 ? 'w3-light-green' : 'w3-green')%>">
						<div class="w3-left"><i class="fa fa-database w3-xxlarge"></i></div>
						<div class="w3-clear"></div>
						<h4><com:TTranslate Text="Catalog" /></h4>
					</div>
				</div>
				<div class="w3-third w3-padding-16 w3-hide-small">
					<div class="step w3-padding w3-text-white w3-margin-right <%=($this->Parent->ActiveStepIndex === 2 ? 'w3-light-green' : 'w3-green')%>">
						<div class="w3-left"><i class="fa fa-terminal w3-xxlarge"></i></div>
						<div class="w3-clear"></div>
						<h4><com:TTranslate Text="Console" /></h4>
					</div>
				</div>
			</div>
			<div class="w3-half">
				<div class="w3-third w3-padding-16 w3-hide-small">
					<div class="step w3-padding w3-text-white w3-margin-right <%=($this->Parent->ActiveStepIndex === 3 ? 'w3-light-green' : 'w3-green')%>">
						<div class="w3-left"><i class="fa fa-cog w3-xxlarge"></i></div>
						<div class="w3-clear"></div>
						<h4><com:TTranslate Text="Config" /></h4>
					</div>
				</div>
				<div class="w3-third w3-padding-16 w3-hide-small">
					<div class="step w3-padding w3-text-white w3-margin-right <%=($this->Parent->ActiveStepIndex === 4 ? 'w3-light-green' : 'w3-green')%>">
						<div class="w3-left"><i class="fa fa-key w3-xxlarge"></i></div>
						<div class="w3-clear"></div>
						<h4><com:TTranslate Text="Authentication" /></h4>
					</div>
				</div>
				<div class="w3-third w3-padding-16 w3-hide-small">
					<div class="step w3-padding w3-text-white w3-margin-right <%=($this->Parent->ActiveStepIndex === 5 ? 'w3-light-green' : 'w3-green')%>">
						<div class="w3-left"><i class="fa fa-check-square w3-xxlarge"></i></div>
						<div class="w3-clear"></div>
						<h4><com:TTranslate Text="Finish" /></h4>
					</div>
				</div>
			</div>
			<div class="w3-clear"></div>
			<div class="w3-green w3-margin-right w3-margin-bottom w3-padding-small">
				<h4><%=$this->Parent->ActiveStep->Title%></h4>
			</div>
		</prop:HeaderTemplate>
		<prop:StartNavigationTemplate>
			<div class="w3-center w3-section">
				<com:TLinkButton
					CommandName="Cancel"
					CssClass="w3-button w3-red"
					Visible="<%=$this->getPage()->getFirstRun() === false%>"
				>
					<i class="fa fa-times"></i> &nbsp;<%[ Cancel ]%>
				</com:TLinkButton>
				<com:TLinkButton
					CommandName="NextStep"
					CssClass="w3-button w3-green"
					Attributes.rel="start_next_step"
				>
					<%[ Next ]%>&nbsp; <i class="fa fa-angle-right"></i>
				</com:TLinkButton>
			</div>
		</prop:StartNavigationTemplate>

		<prop:StepNavigationTemplate>
			<div class="w3-center w3-section">
				<com:TLinkButton
					CommandName="Cancel"
					CssClass="w3-button w3-red"
					Visible="<%=$this->getPage()->getFirstRun() === false%>"
				>
					<i class="fa fa-times"></i> &nbsp;<%[ Cancel ]%>
				</com:TLinkButton>
				<com:TLinkButton
					ID="PreviousStepBtn"
					CommandName="PreviousStep"
					CausesValidation="false"
					CssClass="w3-button w3-green"
				>
					<i class="fa fa-angle-left"></i> &nbsp;<%[ Previous ]%>
				</com:TLinkButton>
				<com:TLinkButton
					ID="NextStepBtn"
					CommandName="NextStep"
					CssClass="w3-button w3-green"
					Attributes.onclick="return (typeof(wizard_validation) == 'function') ? wizard_validation() : true;"
				>
					<%[ Next ]%>&nbsp; <i class="fa fa-angle-right"></i>
				</com:TLinkButton>
			</div>
		</prop:StepNavigationTemplate>

		<prop:FinishNavigationTemplate>
			<div class="w3-center w3-section">
				<com:TLinkButton
					CommandName="Cancel"
					CssClass="w3-button w3-red"
					Visible="<%=$this->getPage()->getFirstRun() === false%>"
				>
					<i class="fa fa-times"></i> &nbsp;<%[ Cancel ]%>
				</com:TLinkButton>
				<com:TLinkButton
					CommandName="PreviousStep"
					CausesValidation="false"
					CssClass="w3-button w3-green"
				>
					<i class="fa fa-angle-left"></i> &nbsp;<%[ Previous ]%>
				</com:TLinkButton>
				<com:TLinkButton
					CommandName="Complete"
					CssClass="w3-button w3-green"
				>
					<i class="fa fa-save"></i> &nbsp;<%[ Save ]%>
				</com:TLinkButton>
			</div>
		</prop:FinishNavigationTemplate>
		<com:TWizardStep ID="Step1" Title="<%[ Step 1 - general options ]%>" StepType="Auto">
			<div class="w3-half" style="float: none; margin: auto">
				<h2><%[ Welcome to the Bacularis install wizard ]%></h2>
				<div class="w3-container w3-margin-bottom w3-margin-top">
					<div class="w3-third"><com:TLabel ForControl="Lang" Text="<%[ Language: ]%>" /></div>
					<div class="w3-third">
						<com:TActiveDropDownList
							ID="Lang"
							CssClass="w3-select w3-border"
							Width="150px"
							OnTextChanged="setLang"
							CausesValidation="false"
							ClientSide.OnComplete="location.reload();"
						>
							<com:TListItem Value="en" Text="English" />
							<com:TListItem Value="fr" Text="French" />
							<com:TListItem Value="ko" Text="Korean" />
							<com:TListItem Value="pl" Text="Polish" />
							<com:TListItem Value="pt" Text="Portuguese" />
							<com:TListItem Value="ru" Text="Russian" />
						</com:TActiveDropDownList>
						<com:TCompareValidator CssClass="validator-block" Display="Dynamic" ControlToValidate="Lang" DataType="String" ValueToCompare="none" Operator="NotEqual" Text="<%[ Please select language. ]%>" />
					</div>
				</div>
				<com:TPanel Visible="<%=$this->getFirstRun()%>">
					<h5><%[ What services do you want to enable for this installation? ]%></h5>
					<div class="w3-container">
						<div class="w3-container">
							<com:TActiveCheckBox
								ID="EnableAPI"
								CssClass="w3-check"
							/>
							<label for="<%=$this->EnableAPI->ClientID%>"> &nbsp;<%[ Enable API instance ]%> (<%[ recommended ]%>)</label>
						</div>
						<div class="w3-container">
							<com:TActiveCheckBox
								ID="EnableWeb"
								CssClass="w3-check"
							/>
							<label for="<%=$this->EnableWeb->ClientID%>"> &nbsp;<%[ Enable web interface ]%></label>
						</div>
					</div>
					<h5 class="w3-margin-top"><%[ Do you have Bacula installed on this host? ]%></h5>
					<div class="w3-container">
						<div>
							<com:TActiveRadioButton
								ID="BaculaInstalled"
								GroupName="BaculaInstall"
								CssClass="w3-check"
								Checked="true"
								Attributes.onclick="show_start_next_btn(true); $('#install_bacula_install').slideDown('fast');$('#install_bacula_not_install').slideUp('fast');"
							/>
							<label for="<%=$this->BaculaInstalled->ClientID%>"> &nbsp;<%[ Yes. I already have Bacula component(s) installed on this host. I would like to use Bacularis with them. ]%></label>
						</div>
						<div id="install_bacula_install" class="w3-container" style="display: <%=$this->BaculaInstalled->Checked ? 'block' : 'none'%>">
						</div>
						<div class="w3-margin-top">
							<com:TActiveRadioButton
								ID="BaculaNotInstalled"
								GroupName="BaculaInstall"
								CssClass="w3-check"
								Attributes.onclick="show_start_next_btn(false); $('#install_bacula_install').slideUp('fast');$('#install_bacula_not_install').slideDown('fast');"
							/>
							<label for="<%=$this->BaculaNotInstalled->ClientID%>"> &nbsp;<%[ No. I do not have Bacula installed. I would like to install Bacula now and use Bacularis with it. ]%></label>
						</div>
						<div id="install_bacula_not_install" class="w3-container" style="display: <%=$this->BaculaNotInstalled->Checked ? 'block' : 'none'%>">
							<div class="w3-container w3-margin-top">
								<h5><%[ What is your operating system? ]%></h5>
								<div class="w3-container w3-margin-bottom">
									<div class="w3-third"><%[ Operating system: ]%></div>
									<div class="w3-rest">
										<com:TActiveDropDownList
											ID="InstallBaculaOSProfile"
											Width="300px"
											CssClass="w3-select w3-border"
										/>
									</div>
								</div>
								<h5><%[ What are your system admin account credentials? ]%></h5>
								<div class="w3-container w3-margin-bottom">
									<div class="w3-third"><%[ System admin login: ]%></div>
									<div class="w3-rest">
										<com:TActiveTextBox
											ID="InstallBaculaAdminUser"
											Width="300px"
											CssClass="w3-input w3-border"
										/>
									</div>
								</div>
								<div class="w3-container w3-margin-bottom">
									<div class="w3-third"><%[ System admin password: ]%></div>
									<div class="w3-rest">
										<com:TActiveTextBox
											ID="InstallBaculaAdminPassword"
											TextMode="Password"
											PersistPassword="true"
											Width="300px"
											CssClass="w3-input w3-border"
										/>
									</div>
								</div>
								<div class="w3-container w3-margin-bottom">
									<div class="w3-third"><%[ Use sudo: ]%></div>
									<div class="w3-rest">
										<com:TActiveCheckBox
											ID="InstallBaculaUseSudo"
											CssClass="w3-check"
										/>
									</div>
								</div>
								<div class="w3-container w3-margin-bottom">
									<div class="w3-third"><%[ Login test ]%>:</div>
									<div class="w3-rest">
										<com:TActiveLinkButton
											ID="LoginCheck"
											CssClass="w3-button w3-green w3-tiny"
											OnCallback="installBaculaLoginTest"
											ClientSide.OnLoading="oInstallBacula.clear_connection_check(); oInstallBacula.show_host_connection_loader(true);"
										>
											<i class="fa fa-play"></i> &nbsp; <%[ Test ]%>
										</com:TActiveLinkButton> &nbsp;
										<i id="check_connection_check_loader" class="fa-solid fa-sync w3-spin" style="display: none"></i>
										<i id="check_connection_check_result_ok" class="fa-solid fa-check w3-text-green" style="display: none"></i>
										<i id="check_connection_check_result_error" class="fa-solid fa-times w3-text-red" style="display: none"></i>
										 &nbsp;<span id="check_connection_check_result_link" class="w3-tiny bold pointer" style="display: none" onclick="oInstallBacula.toggle_host_connection_result();"></span>
										<div class="w3-code" id="check_connection_check_result_output" style="display: none">
											<pre id="check_connection_check_result_raw"></pre>
										</div>
									</div>
								</div>
							</div>
							<div class="w3-container w3-center">
								<button type="button" id="install_bacula_locally_btn" class="w3-button w3-green" onclick="oInstallBaculaLocally.load_install_bacula_locally_window()"><i class="fa-solid fa-rocket"></i> &nbsp;<%[ Install Bacula ]%></button>
								<i class="fa-solid fa-info-circle help_icon w3-text-green" onclick="$(this).next().slideToggle('fast');"></i>
								<div class="directive_help w3-padding" style="display: none;">
									<dd><%[ After clicking the install Bacula button, there will be installed on this host Catalog (PostgreSQL), Bacula Director, Client, Storage and Bconsole. ]%></dd>
								</div>
							</div>
						</div>
					</div>
				</com:TPanel>
			</div>
			<div id="install_bacula_locally_window" class="w3-modal">
				<div class="w3-modal-content w3-animate-top w3-card-4 w3-padding-bottom">
					<header class="w3-container w3-green">
						<span onclick="document.getElementById('install_bacula_locally_window').style.display = 'none'; $('a[rel=start_next_step]:visible').click();" class="w3-button w3-display-topright">&times;</span>
						<h2 id="install_bacula_locally_window_title_add"><%[ Install Bacula ]%></h2>
					</header>
					<div class="w3-container w3-margin-left w3-margin-right">
						<div id="run_install_bacula_log_container" class="w3-container" style="display: none;">
							<a href="javascript:void(0)" onclick="W3SubTabs.open('install_bacula_subtab_result', 'install_bacula_graphical_results', 'run_install_bacula_log_container');">
								<div id="install_bacula_subtab_result" class="subtab_btn w3-half w3-bottombar w3-padding w3-border-red"><%[ Result ]%></div>
							</a>
							<a href="javascript:void(0)" onclick="W3SubTabs.open('install_bacula_subtab_raw_output', 'install_bacula_raw_results', 'run_install_bacula_log_container');">
								<div id="install_bacula_subtab_raw_output" class="subtab_btn w3-half w3-bottombar w3-padding"><%[ Raw output ]%></div>
							</a>
							<div id="install_bacula_graphical_results" class="subtab_item w3-panel w3-card" style="max-height: 288px; overflow-x: auto; overflow-y: hidden;"></div>
							<div id="install_bacula_raw_results" class="subtab_item w3-panel w3-card" style="display: none; max-height: 288px; overflow-x: auto;">
								<div class="w3-code">
									<pre><span id="install_bacula_raw_output"></span></pre>
								</div>
							</div>
						</div>
						<div class="w3-container w3-margin-bottom" id="bacula_installed_successfully" style="display: none">
							<%[ Bacula has been installed successfully. You can close this window and go further. ]%>
						</div>
					</div>
					<footer class="w3-container w3-center" style="padding-bottom: 16px">
						<button type="button" class="w3-button w3-red" onclick="document.getElementById('install_bacula_locally_window').style.display = 'none'; $('a[rel=start_next_step]:visible').click();"><i class="fas fa-times"></i> &nbsp;<%[ Close ]%></button>
					</footer>
				</div>
			</div>
			<com:TCallback ID="InstallBaculaGetOutput" OnCallback="getInstallBaculaOutput" />
			<com:TCallback ID="InstallBaculaAddSUDOSettings" OnCallback="installBaculaAddSUDOSettings" />
			<com:TCallback ID="InstallBaculaConfigureBacularis" OnCallback="installBaculaConfigureBacularis" />
			<com:TCallback ID="InstallBaculaInstallCatalog" OnCallback="installBaculaInstallCatalog" />
			<com:TCallback ID="InstallBaculaInstallDirector" OnCallback="installBaculaInstallDirector" />
			<com:TCallback ID="InstallBaculaInstallStorage" OnCallback="installBaculaInstallStorage" />
			<com:TCallback ID="InstallBaculaInstallClient" OnCallback="installBaculaInstallClient" />
			<com:TCallback ID="InstallBaculaInstallConsole" OnCallback="installBaculaInstallConsole" />
			<script>

var oSteps = {
	add_step: function(step, container_id) {
		const container = document.getElementById(container_id)

		// div left
		const div_left = document.createElement('DIV');
		div_left.classList.add('w3-half');
		div_left.textContent = step.desc;
		div_left.style.padding = '3px 0';

		// div right
		const div_right = document.createElement('DIV');
		div_right.id = step.id;
		div_right.textContent = '-';
		div_right.style.padding = '3px 0';

		// append divs
		container.appendChild(div_left);
		container.appendChild(div_right);
	},
	mark_step_running: function(step_id) {
		const step = document.getElementById(step_id);
		step.removeChild(step.firstChild);
		const icon = document.createElement('I');
		icon.classList.add('fa-solid', 'fa-sync', 'w3-spin');
		step.appendChild(icon);
	},
	mark_step_ok: function(step_id) {
		const step = document.getElementById(step_id);
		step.removeChild(step.firstChild);
		const icon = document.createElement('I');
		icon.classList.add('fa-solid', 'fa-check', 'w3-text-green');
		step.appendChild(icon);
	},
	mark_step_err: function(step_id) {
		const step = document.getElementById(step_id);
		step.removeChild(step.firstChild);
		const icon = document.createElement('I');
		icon.classList.add('fa-solid', 'fa-times', 'w3-text-red');
		step.appendChild(icon);
	},
	clear_steps: function(container_id) {
		const container = document.getElementById(container_id);
		while(container.firstChild) {
			container.removeChild(container.firstChild);
		}
	}
};
var oInstallBaculaLocally = {
	load_install_bacula_locally_window: function(name) {
		oInstallBacula.run();
		document.getElementById('install_bacula_locally_window').style.display = 'block';
	}
};
var oInstallBacula = {
	ids: {
		log_container: 'run_install_bacula_log_container',
		install_graphical_results: 'install_bacula_graphical_results',
		install_raw_results: 'install_bacula_raw_results',
		install_log: 'install_bacula_raw_output',
		check_connection_loader: 'check_connection_check_loader',
		check_connection_result_ok: 'check_connection_check_result_ok',
		check_connection_result_error: 'check_connection_check_result_error',
		check_connection_result_link: 'check_connection_check_result_link',
		check_connection_loader_result_output: 'check_connection_check_result_output',
		check_connection_loader_result_raw: 'check_connection_check_result_raw'
	},
	steps: [
		{
			id: 'add_sudo',
			desc: '<%= Prado::localize(APIInstallWizard::INSTALL_BACULA_STEPS_TXT['add_sudo']) %>',
			cb: <%=$this->InstallBaculaAddSUDOSettings->ActiveControl->Javascript%>
		},
		{
			id: 'configure_bacularis',
			desc: '<%= Prado::localize(APIInstallWizard::INSTALL_BACULA_STEPS_TXT['configure_bacularis']) %>',
			cb: <%=$this->InstallBaculaConfigureBacularis->ActiveControl->Javascript%>
		},
		{
			id: 'install_catalog',
			desc: '<%= Prado::localize(APIInstallWizard::INSTALL_BACULA_STEPS_TXT['install_catalog']) %>',
			cb: <%=$this->InstallBaculaInstallCatalog->ActiveControl->Javascript%>
		},
		{
			id: 'install_director',
			desc: '<%= Prado::localize(APIInstallWizard::INSTALL_BACULA_STEPS_TXT['install_director']) %>',
			cb: <%=$this->InstallBaculaInstallDirector->ActiveControl->Javascript%>
		},
		{
			id: 'install_storage',
			desc: '<%= Prado::localize(APIInstallWizard::INSTALL_BACULA_STEPS_TXT['install_storage']) %>',
			cb: <%=$this->InstallBaculaInstallStorage->ActiveControl->Javascript%>
		},
		{
			id: 'install_client',
			desc: '<%= Prado::localize(APIInstallWizard::INSTALL_BACULA_STEPS_TXT['install_client']) %>',
			cb: <%=$this->InstallBaculaInstallClient->ActiveControl->Javascript%>
		},
		{
			id: 'install_console',
			desc: '<%= Prado::localize(APIInstallWizard::INSTALL_BACULA_STEPS_TXT['install_console']) %>',
			cb: <%=$this->InstallBaculaInstallConsole->ActiveControl->Javascript%>
		}
	],
	run: function() {
		this.clear_steps();

		// Add steps in results
		for (const step of this.steps) {
			oSteps.add_step(step, this.ids.install_graphical_results);
		}

		this.show_results(true);

		// run particular steps
		this.run_step(this.steps[0]);
	},
	run_step: function(step) {
		oSteps.mark_step_running(step.id);
		step.cb.setCallbackParameter(step.id);
		step.cb.setRequestTimeOut(300000);
		const error_f = step.cb.options.error;
		step.cb.options.error = (request, textStatus, errorThrown) => {
			oInstallBacula.run_step_cb_err(step.id);
			return error_f(request, textStatus, errorThrown);
		}
		step.cb.dispatch();
	},
	run_step_cb_ok: function(step_id, output_id) {
		if (output_id) {
			setTimeout(() => {
				oInstallBacula.get_install_output(step_id, output_id)
			}, 1500);
			return;
		}
		const step_len = oInstallBacula.steps.length;
		for (let i = 0; i < step_len; i++) {
			if (oInstallBacula.steps[i].id == step_id) {
				// mark step as finished successfully
				oSteps.mark_step_ok(step_id);

				if ((i+1) < step_len) {
					// run next step
					oInstallBacula.run_step(oInstallBacula.steps[i+1]);
				}
				break;
			}
		}
	},
	run_step_cb_err: function(step_id) {
		oSteps.mark_step_err(step_id);
	},
	get_install_output: function(step_id, output_id) {
		const cb = <%=$this->InstallBaculaGetOutput->ActiveControl->Javascript%>;
		cb.setCallbackParameter([step_id, output_id]);
		cb.dispatch();
	},
	show_results: function(show) {
		const container = document.getElementById(this.ids.log_container);
		container.style.display = show ? 'block' : 'none';
	},
	clear_steps: function() {
		this.clear_graphical_results();
		this.clear_raw_results();
	},
	clear_graphical_results: function() {
		oSteps.clear_steps(this.ids.install_graphical_results);
	},
	clear_raw_results: function() {
		const container = document.getElementById(this.ids.install_log);
		container.textContent = '';
	},
	clear_connection_check: function() {
		this.show_host_connection_loader(false);

		// clear state icons
		const ok = document.getElementById(this.ids.check_connection_result_ok);
		ok.style.display = 'none';
		const error = document.getElementById(this.ids.check_connection_result_error);
		error.style.display = 'none';

		// clear output
		const output = document.getElementById(this.ids.check_connection_loader_result_output);
		output.style.display = 'none';
		const raw = document.getElementById(this.ids.check_connection_loader_result_raw);
		raw.textContent = '';
		const link = document.getElementById(this.ids.check_connection_result_link);
		link.style.display = 'none';
		link.textContent = '<%[ Show result ]%>';
	},
	set_host_connection_result: function(state, result) {
		const ok = document.getElementById(this.ids.check_connection_result_ok);
		const error = document.getElementById(this.ids.check_connection_result_error);
		const link = document.getElementById(this.ids.check_connection_result_link);
		const raw = document.getElementById(this.ids.check_connection_loader_result_raw);
		if (state) {
			ok.style.display = 'inline-block';
			error.style.display = 'none';
		} else {
			error.style.display = 'inline-block';
			ok.style.display = 'none';
		}
		raw.innerHTML = result.join("<br />");
		link.style.display = 'inline-block';
	},
	toggle_host_connection_result: function() {
		const output = $('#' + this.ids.check_connection_loader_result_output);
		const link = document.getElementById(this.ids.check_connection_result_link);
		if (output.is(':hidden')) {
			output.slideDown('fast');
			link.textContent = '<%[ Hide result ]%>';
		} else {
			output.slideUp('fast');
			link.textContent = '<%[ Show result ]%>';
		}
	},
	show_host_connection_loader: function(show) {
		const loader = document.getElementById(this.ids.check_connection_loader);
		loader.style.display = show ? 'inline-block' : 'none';
	},
	check_host_connection_cb: function(result) {
		const self = oInstallBacula;
		self.show_host_connection_loader(false);
		self.set_host_connection_result(result.success, result.output);
	}
};
function show_start_next_btn(show) {
	const next = document.querySelector('a[rel="start_next_step"]');
	if (show || <%=$this->getBaculaInstalled() ? '1' : '0'%> == 1) {
		next.style.display = 'inline-block';
	} else {
		next.style.display = 'none';
	}
}
<%=$this->getBaculaInstalled() ? 'show_start_next_btn(true);' : ''%>
			</script>
		</com:TWizardStep>
		<com:TWizardStep ID="Step2" Title="<%[ Step 2 - share the Bacula Catalog Database ]%>" StepType="Auto">
			<div class="w3-half" style="float: none; margin: auto">
				<h5><%[ Do you want to setup and to share the Bacula Catalog Database access for this API instance? ]%></h5>
				<div class="w3-container w3-section">
					<com:TRadioButton
						ID="DatabaseNo"
						CssClass="w3-radio"
						GroupName="SelectDatabase"
						Attributes.onclick="$('#configure_database').hide();"
					/> <com:TLabel ForControl="DatabaseNo" Text="<%[ No ]%>" />
				</div>
				<div class="w3-container w3-section">
					<com:TRadioButton
						ID="DatabaseYes"
						CssClass="w3-radio"
						GroupName="SelectDatabase"
						Attributes.onclick="$('#configure_database').show();"
					/> <com:TLabel ForControl="DatabaseYes" Text="<%[ Yes ]%>" />
				</div>
				<div id="configure_database" style="display: <%=($this->DatabaseYes->Checked === true) ? '' : 'none';%>">
					<com:TActivePanel ID="Step2Content">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="DBType" Text="<%[ Database type: ]%>" /></div>
							<div class="w3-col w3-third">
								<com:TActiveDropDownList
									ID="DBType"
									CssClass="w3-select w3-border"
									Width="170px"
									OnLoad="setDBType"
									OnTextChanged="setDBType"
									CausesValidation="false"
									OnCallback="renderPanel"
								>
									<com:TListItem Value="none" Text="<%[ select database ]%>" />
									<com:TListItem Value="pgsql" Text="PostgreSQL" />
									<com:TListItem Value="mysql" Text="MySQL" />
									<com:TListItem Value="sqlite" Text="SQLite" />
								</com:TActiveDropDownList>
								<com:TCompareValidator
									Display="Dynamic"
									ControlToValidate="DBType"
									DataType="String"
									ValueToCompare="none"
									Operator="NotEqual"
									ValidationGroup="DbGroup"
									Text="<%[ Please select database type. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="DBName" Text="<%[ Database name: ]%>" /></div>
							<div class="w3-col w3-third">
								<com:TTextBox ID="DBName" CssClass="w3-input w3-border" />
								<com:TRequiredFieldValidator
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="DBName"
									ValidationGroup="DbGroup"
									Text="<%[ Please enter database name. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="Login" Text="<%[ Login: ]%>" /></div>
							<div class="w3-col w3-third">
								<com:TActiveTextBox ID="Login" CssClass="w3-input w3-border" />
								<com:TRequiredFieldValidator
									ID="LoginValidator"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="Login"
									ValidationGroup="DbGroup"
									Text="<%[ Please enter login. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="Password" Text="<%[ Password: ]%>" /></div>
							<div class="w3-col w3-third"><com:TActiveTextBox
								ID="Password"
								CssClass="w3-input w3-border"
								TextMode="Password"
								PersistPassword="true"
							 /></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="IP" Text="<%[ IP address (or hostname): ]%>" /></div>
							<div class="w3-col w3-third">
								<com:TActiveTextBox ID="IP" CssClass="w3-input w3-border" />
								<com:TRequiredFieldValidator
									ID="IPValidator"
									Display="Dynamic"
									ControlToValidate="IP"
									ValidationGroup="DbGroup"
									Text="<%[ Please enter IP address or hostname. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="Port" Text="<%[ Port: ]%>" /></div>
							<div class="w3-col w3-third">
								<com:TActiveTextBox ID="Port" CssClass="w3-input w3-border" Width="55px" MaxLength="5" Enabled="false" />
								<com:TRequiredFieldValidator
									ID="PortValidator"
									Display="Dynamic"
									ControlToValidate="Port"
									ValidationGroup="DbGroup"
									Text="<%[ Please enter database port. ]%>"
								/>
							</div>
						</div>
						<com:TActivePanel
							ID="DBPathField"
							CssClass="w3-row w3-section"
							Display="<%=$this->getPage()->getFirstRun() === false && !$this->IsCallBack && $this->getPage()->config['db']['type'] == 'sqlite' ? 'Fixed' : $this->DBPathField->Display%>">
							<div class="w3-col w3-third"><com:TLabel ForControl="DBPath" Text="<%[ SQLite database path: ]%>" /></div>
							<div class="w3-col w3-third">
								<com:TActiveTextBox ID="DBPath" CssClass="w3-input w3-border" Enabled="false" />
								<com:TRequiredFieldValidator
									ID="DBPathValidator"
									Display="Dynamic"
									ControlToValidate="DBPath"
									ValidationGroup="DbGroup"
									Text="<%[ Please enter database path. ]%>"
								/>
							</div>
						</com:TActivePanel>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third" style="vertical-align: top"><com:TLabel ForControl="ConnectionTest" Text="<%[ Connection test: ]%>" CssClass="test_label" /></div>
							<div class="w3-col w3-third">
								<table>
									<tr>
										<td align="center" valign="middle">
											<com:TActiveLinkButton
												ID="ConnectionTest"
												CssClass="w3-button w3-green"
												CausesValidation="false"
												OnCallback="connectionDBTest"
											>
												<prop:ClientSide.OnLoading>
													$('#db_test_result_ok').hide();
													$('#db_test_result_err').hide();
													$('#<%=$this->DbTestResultErr->ClientID%>').hide();
													$('#db_test_loader').show();
												</prop:ClientSide.OnLoading>
												<prop:ClientSide.OnComplete>
													$('#db_test_loader').hide();
												</prop:ClientSide.OnComplete>
												<i class="fas fa-play"></i> &nbsp;<%[ test ]%>
											</com:TActiveLinkButton>
										</td>
										<td style="padding-left: 10px">
											<span id="db_test_loader" style="display: none">
												<i class="fas fa-sync fa-spin" title="<%[ Loading... ]%>"></i>
											</span>
											<span id="db_test_result_ok" class="w3-text-green" style="display: none">
												<i class="fas fa-check"></i> &nbsp;<%[ OK ]%>
											</span>
											<span id="db_test_result_err" class="w3-text-red" style="display: none">
												<i class="fas fa-exclamation-circle"></i> &nbsp;
											</span>
											<com:TActiveLabel ID="DbTestResultErr" CssClass="w3-text-red" Display="None"><%[ Connection error ]%></com:TActiveLabel>
										</td>
									</tr>
								</table>
							</div>
						</div>
					</com:TActivePanel>
				</div>
			</div>
			<script type="text/javascript">
				var wizard_validation = function() {
					var result = true;
					var db = document.getElementById('<%=$this->DatabaseYes->ClientID%>');
					if (db.checked) {
						result = Prado.Validation.validate(Prado.Validation.getForm(), 'DbGroup');
					}
					return result;
				}
			</script>
		</com:TWizardStep>
		<com:TWizardStep ID="Step3" Title="<%[ Step 3 - share the Bacula Bconsole commands interface ]%>" StepType="Auto">
			<div class="w3-half" style="float: none; margin: auto">
				<h5><%[ Do you want to setup and share the Bacula Bconsole interface to execute commands in this API instance? ]%></h5>
				<div class="w3-container w3-section">
					<com:TRadioButton
						ID="ConsoleNo"
						GroupName="SelectConsole"
						CssClass="w3-radio"
						Attributes.onclick="$('#configure_console').hide();"
					/> <com:TLabel ForControl="ConsoleNo" Text="<%[ No ]%>" />
				</div>
				<div class="w3-container w3-section">
					<com:TRadioButton
						ID="ConsoleYes"
						GroupName="SelectConsole"
						CssClass="w3-radio"
						Attributes.onclick="$('#configure_console').show();"
					/> <com:TLabel ForControl="ConsoleYes" Text="<%[ Yes ]%>" />
				</div>
				<div id="configure_console" style="display: <%=($this->ConsoleYes->Checked === true) ? '' : 'none';%>">
					<div class="w3-row w3-section">
						<div class="w3-col w3-third">
							<com:TLabel
								ForControl="BconsolePath"
								Text="<%[ Bconsole binary file path: ]%>" />
						</div>
						<div class="w3-col w3-third">
							<com:TTextBox
								ID="BconsolePath"
								CssClass="w3-input w3-border"
								CausesValidation="false"
							/>
							<com:TRequiredFieldValidator
								Display="Dynamic"
								ControlToValidate="BconsolePath"
								Text="<%[ Please enter bconsole path. ]%>"
							/>
						</div>
					</div>
					<div class="w3-row w3-section">
						<div class="w3-col w3-third">
							<com:TLabel
								ForControl="BconsoleConfigPath"
								Text="<%[ Bconsole admin config file path: ]%>"
							/>
						</div>
						<div class="w3-col w3-third">
							<com:TTextBox
								ID="BconsoleConfigPath"
								CssClass="w3-input w3-border"
								CausesValidation="false"
							/>
							<com:TRequiredFieldValidator
								Display="Dynamic"
								ControlToValidate="BconsoleConfigPath"
								Text="<%[ Please enter bconsole config file path. ]%>"
							/>
						</div>
					</div>
					<div class="w3-row w3-section">
						<div class="w3-col w3-third">
							<com:TLabel
								ForControl="UseSudo"
								Text="<%[ Use sudo: ]%>"
							/>
						</div>
						<div class="w3-col w3-third">
							<com:TCheckBox
								ID="UseSudo"
								CssClass="w3-check"
							/> &nbsp;<a href="javascript:void(0)" onclick="oSudoConfig.get_config('bconsole');"><%[ Get sudo configuration ]%></a>

						</div>
					</div>
					<i class="fa-solid fa-wrench"></i> <a id="bconsole_advanced_settings_btn" href="javascript:void(0)" onclick="$('#bconsole_advanced_settings').toggle('fast');"><%[ Advanced options ]%></a>
					<div id="bconsole_advanced_settings" style="display: none;">
						<div class="w3-row w3-section">
							<div class="w3-col w3-quarter">
								<com:TLabel
									ForControl="BconsoleSudoRunAsUser"
									Text="<%[ Sudo Runas user: ]%>"
								/>
							</div>
							<div class="w3-col w3-threequarter">
								<com:TTextBox
									ID="BconsoleSudoRunAsUser"
									CssClass="w3-input w3-border"
									CausesValidation="false"
									Width="170px"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-quarter">
								<com:TLabel
									ForControl="BconsoleSudoRunAsGroup"
									Text="<%[ Sudo Runas group: ]%>"
								/>
							</div>
							<div class="w3-col w3-threequarter">
								<com:TTextBox
									ID="BconsoleSudoRunAsGroup"
									CssClass="w3-input w3-border"
									CausesValidation="false"
									Width="170px"
								/>
							</div>
						</div>
					</div>
					<div class="w3-row w3-section">
						<div class="w3-col w3-third">
							<com:TLabel
								ForControl="BconsoleConnectionTest"
								Text="<%[ Bconsole connection test: ]%>"
							/></div>
						<div class="w3-col w3-third">
							<table>
								<tr>
									<td>
										<com:TActiveLinkButton
											ID="BconsoleConnectionTest"
											CssClass="w3-button w3-green"
											CausesValidation="false"
											OnCallback="connectionBconsoleTest"
										>
											<prop:ClientSide.OnLoading>
												$('#bconsole_test_result_ok').hide();
												$('#bconsole_test_result_err').hide();
												$('#<%=$this->BconsoleTestResultErr->ClientID%>').hide();
												$('#bconsole_test_loader').show();
											</prop:ClientSide.OnLoading>
											<prop:ClientSide.OnComplete>
												$('#bconsole_test_loader').hide();
											</prop:ClientSide.OnComplete>
											<i class="fas fa-play"></i> &nbsp;<%[ test ]%>
										</com:TActiveLinkButton>
									</td>
									<td style="padding-left: 10px">
										<span id="bconsole_test_loader" style="display: none">
											<i class="fas fa-sync fa-spin" title="<%[ Loading... ]%>"></i>
										</span>
										<span id="bconsole_test_result_ok" class="w3-text-green" style="display: none">
											<i class="fas fa-check"></i> &nbsp;<%[ OK ]%>
										</span>
										<span id="bconsole_test_result_err" class="w3-text-red" style="display: none">
											<i class="fas fa-exclamation-circle"></i> &nbsp;
										</span>
										<com:TActiveLabel ID="BconsoleTestResultErr" CssClass="w3-text-red" Display="None"><%[ Connection error ]%></com:TActiveLabel>
									</td>
								</tr>
							</table>
						</div>
					</div>
					<div class="line left">
						<span><b><%[ NOTE! ]%></b><br /><em><%[ Bacularis needs access to bconsole by the web server. ]%></em></span>
					</div>
				</div>
			</div>
		</com:TWizardStep>
		<com:TWizardStep ID="Step4" Title="<%[ Step 4 - share the Bacula configuration interface ]%>" StepType="Auto">
			<div class="w3-half" style="float: none; margin: auto">
				<h5><%[ Do you want to setup and share the Bacula configuration interface to configure Bacula components via this API instance? ]%></h5>
				<div class="w3-container w3-section">
					<com:TRadioButton
						ID="ConfigNo"
						GroupName="SelectConfig"
						CssClass="w3-radio"
						Attributes.onclick="$('#configure_config').hide();"
					/> <com:TLabel ForControl="ConfigNo" Text="<%[ No ]%>" />
				</div>
				<div class="w3-container w3-section">
					<com:TRadioButton
						ID="ConfigYes"
						GroupName="SelectConfig"
						CssClass="w3-radio"
						Attributes.onclick="$('#configure_config').show();"
					/> <com:TLabel ForControl="ConfigYes" Text="<%[ Yes ]%>" />
				</div>
				<div id="configure_config" style="display: <%=($this->ConfigYes->Checked === true) ? 'block' : 'none';%>">
					<div class="w3-right-align">
						<span><%[ Get pre-defined paths: ]%></span>
						<select id="pre_defined_paths" onchange="oConfigWizardStep4.set_paths();" class="w3-input w3-border" style="width: 400px; display: inline;">
							<option value=""><%[ Select paths ]%></option>
							<option value="system"><%[ Binaries: ]%> /usr/sbin, <%[ Configs: ]%> /etc/bacula</option>
							<option value="bacula.org"><%[ Binaries: ]%> /opt/bacula/bin, <%[ Configs: ]%> /opt/bacula/etc</option>
							<option value="debian"><%[ Binaries: ]%> /usr/lib/bacula, <%[ Configs: ]%> /etc/bacula</option>
							<option value="freebsd"><%[ Binaries: ]%> /usr/local/sbin, <%[ Configs: ]%> /usr/local/etc/bacula</option>
						</select>
					</div>
					<fieldset>
						<legend><%[ General configuration ]%></legend>
						<div class="w3-row w3-section" title="<%[ In this directory Baculum API saves temporarily Bacula configuration files (mainly for validation purposes) just before they are written as real Bacula configuration files. ]%>">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="BConfigDir"
									Text="<%[ Baculum working directory for Bacula config: ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="BConfigDir"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/> &nbsp;
								<span class="config_test_loader" style="display: none">
									<i class="fas fa-sync fa-spin" title="<%[ Loading... ]%>"></i>
								</span>
								<com:TActiveLabel
									ID="BConfigDirTestOk"
									Display="None"
									CssClass="w3-text-green"
									EnableViewState="false"
								>
									<i class="fas fa-check" title="<%[ OK ]%>"></i> &nbsp;<%[ OK ]%>
								</com:TActiveLabel>
								<com:TActiveLabel
									ID="BConfigDirTestErr"
									Display="None"
									CssClass="w3-text-red"
									EnableViewState="false"
								>
									<!--i class="fas fa-exclamation-circle" title="<%[ Error ]%>"></i--> &nbsp;<%[ Error ]%>
								</com:TActiveLabel>
								<com:TRequiredFieldValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="BConfigDir"
									Display="Dynamic"
									Text="<%[ Directory path field is required. ]%>"
								/>
								<com:TActiveCustomValidator
									ID="BConfigDirWritableTest"
									ValidationGroup="ConfigGroup"
									ControlToValidate="BConfigDir"
									Text="<%[ Provided directory path is not writable by web server. ]%>"
									Display="Dynamic"
									OnServerValidate="testConfigDir"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="BJSONUseSudo"
									Text="<%[ Use sudo: ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TCheckBox
									ID="BJSONUseSudo"
									CssClass="w3-check"
								/> &nbsp;<a href="javascript:void(0)" onclick="oSudoConfig.get_config('config');"><%[ Get sudo configuration ]%></a>
							</div>
						</div>
						<i class="fa-solid fa-wrench"></i> <a href="javascript:void(0)" onclick="$('#config_advanced_settings').toggle('fast');"><%[ Advanced options ]%></a>
						<div id="config_advanced_settings" style="display: none;">
							<div class="w3-row w3-section">
								<div class="w3-col w3-quarter">
									<com:TLabel
										ForControl="BConfigSudoRunAsUser"
										Text="<%[ Sudo Runas user: ]%>"
									/>
								</div>
								<div class="w3-col w3-threequarter">
									<com:TTextBox
										ID="BConfigSudoRunAsUser"
										CssClass="w3-input w3-border"
										CausesValidation="false"
										Width="170px"
									/>
								</div>
							</div>
							<div class="w3-row w3-section">
								<div class="w3-col w3-quarter">
									<com:TLabel
										ForControl="BConfigSudoRunAsGroup"
										Text="<%[ Sudo Runas group: ]%>"
									/>
								</div>
								<div class="w3-col w3-threequarter">
									<com:TTextBox
										ID="BConfigSudoRunAsGroup"
										CssClass="w3-input w3-border"
										CausesValidation="false"
										Width="170px"
									/>
								</div>
							</div>
						</div>
					</fieldset>
					<fieldset>
						<legend>Director</legend>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="BDirJSONPath"
									Text="<%[ bdirjson binary file path: ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="BDirJSONPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/> &nbsp;
								<span class="config_test_loader" style="display: none">
									<i class="fas fa-sync fa-spin" title="<%[ Loading... ]%>"></i>
								</span>
								<com:TActiveLabel
									ID="BDirJSONPathTestOk"
									Display="None"
									CssClass="w3-text-green"
									EnableViewState="false"
								>
									<i class="fas fa-check" title="<%[ OK ]%>"></i> &nbsp;<%[ OK ]%>
								</com:TActiveLabel>
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="BDirJSONPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
								<com:TActiveLabel
									ID="BDirJSONPathTestErr"
									Display="None"
									CssClass="w3-text-red"
									EnableViewState="false"
								>
									<i class="fas fa-exclamation-circle" title="<%[ Error ]%>"></i> &nbsp;<%[ Connection error ]%>
								</com:TActiveLabel>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="DirCfgPath"
									Text="<%[ Main Director config file path (usually bacula-dir.conf): ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="DirCfgPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/>
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="DirCfgPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
							</div>
						</div>
					</fieldset>
					<fieldset>
						<legend>Storage Daemon</legend>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="BSdJSONPath"
									Text="<%[ bsdjson binary file path: ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="BSdJSONPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/> &nbsp;
								<span class="config_test_loader" style="display: none">
									<i class="fas fa-sync fa-spin" title="<%[ Loading... ]%>"></i>
								</span>
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="BSdJSONPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
								<com:TActiveLabel
									ID="BSdJSONPathTestOk"
									Display="None"
									CssClass="w3-text-green"
									EnableViewState="false"
								>
									<i class="fas fa-check" title="<%[ OK ]%>"></i> &nbsp;<%[ OK ]%>
								</com:TActiveLabel>
								<com:TActiveLabel
									ID="BSdJSONPathTestErr"
									Display="None"
									CssClass="w3-text-red"
									EnableViewState="false"
								>
									<i class="fas fa-exclamation-circle" title="<%[ Error ]%>"></i> &nbsp;<%[ Connection error ]%>
								</com:TActiveLabel>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="SdCfgPath"
									Text="<%[ Main Storage Daemon config file path (usually bacula-sd.conf): ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="SdCfgPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/>
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="SdCfgPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
							</div>
						</div>
					</fieldset>
					<fieldset>
						<legend>File Daemon/Client</legend>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="BFdJSONPath"
									Text="<%[ bfdjson binary file path: ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="BFdJSONPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/> &nbsp;
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="BFdJSONPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
								<span class="config_test_loader" style="display: none">
									<i class="fas fa-sync fa-spin" title="<%[ Loading... ]%>"></i>
								</span>
								<com:TActiveLabel
									ID="BFdJSONPathTestOk"
									Display="None"
									CssClass="w3-text-green"
									EnableViewState="false"
								>
									<i class="fas fa-check" title="<%[ OK ]%>"></i> &nbsp;<%[ OK ]%>
								</com:TActiveLabel>
								<com:TActiveLabel
									ID="BFdJSONPathTestErr"
									Display="None"
									CssClass="w3-text-red"
									EnableViewState="false"
								>
									<i class="fas fa-exclamation-circle" title="<%[ Error ]%>"></i> &nbsp;<%[ Connection error ]%>
								</com:TActiveLabel>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="FdCfgPath"
									Text="<%[ Main File Daemon config file path (usually bacula-fd.conf): ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="FdCfgPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/>
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="FdCfgPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
							</div>
						</div>
					</fieldset>
					<fieldset>
						<legend>Bconsole</legend>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="BBconsJSONPath"
									Text="<%[ bbconsjson binary file path: ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="BBconsJSONPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
								<com:TTextBox
									ID="BBconsJSONPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/> &nbsp;
								<span class="config_test_loader" style="display: none">
									<i class="fas fa-sync fa-spin" title="<%[ Loading... ]%>"></i>
								</span>
								<com:TActiveLabel
									ID="BBconsJSONPathTestOk"
									Display="None"
									CssClass="w3-text-green"
									EnableViewState="false"
								>
									<i class="fas fa-check" title="<%[ OK ]%>"></i> &nbsp;<%[ OK ]%>
								</com:TActiveLabel>
								<com:TActiveLabel
									ID="BBconsJSONPathTestErr"
									Display="None"
									CssClass="w3-text-red"
									EnableViewState="false"
								>
									<i class="fas fa-exclamation-circle" title="<%[ Error ]%>"></i> &nbsp;<%[ Connection error ]%>
								</com:TActiveLabel>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third">
								<com:TLabel
									ForControl="BconsCfgPath"
									Text="<%[ Admin Bconsole config file path (usually bconsole.conf): ]%>"
								/>
							</div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="BconsCfgPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									Width="370px"
								/>
								<com:TCustomValidator
									ValidationGroup="ConfigGroup"
									ControlToValidate="BconsCfgPath"
									ClientValidationFunction="bjsontools_validator"
									Display="Dynamic"
									Text="<%[ There is required to provide both binary file and config file paths. ]%>"
								/>
							</div>
						</div>
					</fieldset>
					<div class="w3-center w3-margin-top">
						<com:TActiveLinkButton
							ID="TestJSONToolsConfig"
							ValidationGroup="ConfigGroup"
							OnClick="testJSONToolsCfg"
							CssClass="w3-button w3-green"
						>
							<prop:ClientSide.OnLoading>
								bjsontools_hide_test_results();
								$('.config_test_loader').show();
							</prop:ClientSide.OnLoading>
							<prop:ClientSide.OnComplete>
								$('.config_test_loader').hide();
							</prop:ClientSide.OnComplete>
							<i class="fas fa-play"></i> &nbsp;<%[ Test configuration ]%>
						</com:TActiveLinkButton>
					</div>
				</div>
			</div>
<script>
var oConfigWizardStep4 = {
	paths: {
		'system': {
			configs: '/etc/bacula/',
			binaries: '/usr/sbin/'
		},
		'bacula.org': {
			configs: '/opt/bacula/etc/',
			binaries: '/opt/bacula/bin/'
		},
		'debian': {
			configs: '/etc/bacula/',
			binaries: '/usr/lib/bacula/'
		},
		'freebsd': {
			configs: '/usr/local/etc/bacula/',
			binaries: '/usr/local/sbin/'
		}
	},
	ids: {
		pre_defined_paths: 'pre_defined_paths',
		jsontools: {
			bdirjson: {
				binary: '<%=$this->BDirJSONPath->ClientID%>',
				config: '<%=$this->DirCfgPath->ClientID%>'
			},
			bsdjson: {
				binary: '<%=$this->BSdJSONPath->ClientID%>',
				config: '<%=$this->SdCfgPath->ClientID%>'
			},
			bfdjson: {
				binary: '<%=$this->BFdJSONPath->ClientID%>',
				config: '<%=$this->FdCfgPath->ClientID%>'
			},
			bbconsjson: {
				binary: '<%=$this->BBconsJSONPath->ClientID%>',
				config: '<%=$this->BconsCfgPath->ClientID%>'
			}
		}
	},
	configs: {
		bdirjson: {
			config: 'bacula-dir.conf'
		},
		bsdjson: {
			config: 'bacula-sd.conf'
		},
		bfdjson: {
			config: 'bacula-fd.conf'
		},
		bbconsjson: {
			config: 'bconsole.conf'
		}
	},
	set_paths: function() {
		var paths = document.getElementById(this.ids.pre_defined_paths);
		if (paths.value) {
			var bin, conf;
			for (var binary in this.ids.jsontools) {
				bin = document.getElementById(this.ids.jsontools[binary].binary);
				conf = document.getElementById(this.ids.jsontools[binary].config);
				bin.value = this.paths[paths.value].binaries + binary;
				conf.value = this.paths[paths.value].configs + this.configs[binary].config;
			}
		}
	}
};
</script>
		</com:TWizardStep>
		<com:TWizardStep ID="Step5" Title="<%[ Step 5 - authentication ]%>" StepType="Auto">
			<div class="w3-half" style="float: none; margin: auto">
				<h3><%[ API authentication ]%></h3>
				<div class="w3-container w3-section" style="display: <%=$this->getBaculaInstalled() ? 'none' : 'block'%>">
					<com:TRadioButton
						ID="AuthOAuth2"
						GroupName="SelectAuth"
						CssClass="w3-radio"
						Attributes.onclick="$('#configure_basic_auth').hide();$('#configure_oauth2_auth').show(); $('#configure_web_auth').show();"
					/>
					<com:TLabel
						ForControl="AuthOAuth2"
						Text="<%[ Use OAuth2 for authorization and authentication ]%>"
					/>
				</div>
				<div class="w3-container w3-section" style="display: <%=$this->getBaculaInstalled() ? 'none' : 'block'%>">
					<com:TRadioButton
						ID="AuthBasic"
						GroupName="SelectAuth"
						CssClass="w3-radio"
						Checked="true"
						Attributes.onclick="$('#configure_oauth2_auth').hide();$('#configure_basic_auth').show(); document.getElementById('<%=$this->SetAPICredentialsForWeb->ClientID%>').checked ? $('#configure_web_auth').hide() : $('#configure_web_auth').show();"
					/>
					<com:TLabel
						ForControl="AuthBasic"
						Text="<%[ Use HTTP Basic authentication ]%>"
					/>
				</div>
				<div id="configure_basic_auth" style="display: <%=($this->AuthBasic->Checked === true) ? '' : 'none';%>">
					<com:TPanel Visible="<%=$this->getFirstRun()%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APILogin" Text="<%[ Administration login: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APILogin"
									CssClass="w3-input w3-border w3-show-inline-block"
									CausesValidation="false"
									Width="370px"
									Attributes.onkeyup="set_api_credentials_for_web()"
								/>
								<com:TRequiredFieldValidator
									Display="Dynamic"
									ControlToValidate="APILogin"
									ValidationGroup="Basic"
									Text="<%[ Please enter login. ]%>"
								/>
								<com:TRegularExpressionValidator
									Display="Dynamic"
									ControlToValidate="APILogin"
									ValidationGroup="Basic"
									RegularExpression="<%=BasicAPIUserConfig::USER_PATTERN%>"
									Text="<%[ Invalid login value. Login may contain a-z A-Z 0-9 characters. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIPassword" Text="<%[ Administration password: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIPassword"
									CssClass="w3-input w3-border w3-show-inline-block"
									TextMode="Password"
									MaxLength="60"
									PersistPassword="true"
									Width="370px"
									Attributes.onkeyup="set_api_credentials_for_web()"
								/>
								<com:TRequiredFieldValidator
									Display="Dynamic"
									ControlToValidate="APIPassword"
									ValidationGroup="Basic"
									Text="<%[ Please enter password. ]%>"
								/>
								<com:TRegularExpressionValidator
									Display="Dynamic"
									ControlToValidate="APIPassword"
									RegularExpression="[\S\s]{5,60}"
									ValidationGroup="Basic"
									Text="<%[ Password must be longer than 4 chars. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="RetypeAPIPassword" Text="<%[ Retype administration password: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="RetypeAPIPassword"
									CssClass="w3-input w3-border w3-show-inline-block"
									TextMode="Password"
									MaxLength="60"
									PersistPassword="true"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									ID="RetypePasswordRequireValidator"
									Display="Dynamic"
									ControlToValidate="RetypeAPIPassword"
									ValidationGroup="Basic"
									Text="<%[ Please enter retype password. ]%>"
								/>
								<com:TRegularExpressionValidator
									ID="RetypePasswordRegexpValidator"
									Display="Dynamic"
									ControlToValidate="RetypeAPIPassword"
									RegularExpression="[\S\s]{5,60}"
									ValidationGroup="Basic"
									Text="<%[ Password must be longer than 4 chars. ]%>"
								/>
								<com:TCompareValidator
									ID="RetypePasswordCustomValidator"
									Display="Dynamic"
									ControlToValidate="RetypeAPIPassword"
									ControlToCompare="APIPassword"
									ValidationGroup="Basic"
									Text="<%[ Passwords must be the same. ]%>"
								/>
							</div>
						</div>
						<com:TCheckBox
							ID="SetAPICredentialsForWeb"
							CssClass="w3-check"
							Attributes.onclick="this.checked ? $('#configure_web_auth').hide() : $('#configure_web_auth').show(); set_api_credentials_for_web();"
							Checked="true"
						/> <label for="<%=$this->SetAPICredentialsForWeb->ClientID%>"> &nbsp;<%[ Use the same credentials for the API and for the web interface ]%></label>
					</com:TPanel>
				</div>
				<div id="configure_oauth2_auth" style="display: <%=$this->AuthOAuth2->Checked ? '' : 'none';%>">
					<com:TPanel Visible="<%=($this->getFirstRun() || $this->getAddAuthParams())%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIOAuth2ClientId" Text="<%[ OAuth2 Client ID: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIOAuth2ClientId"
									CssClass="w3-input w3-border w3-show-inline-block"
									CausesValidation="false"
									MaxLength="32"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIOAuth2ClientId"
									ValidationGroup="OAuth2"
									Text="<%[ Please enter Client ID. ]%>"
								/>
								<com:TRegularExpressionValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIOAuth2ClientId"
									RegularExpression="<%=OAuth2::CLIENT_ID_PATTERN%>"
									ValidationGroup="OAuth2"
									Text="<%[ Invalid Client ID value. Client ID may contain a-z A-Z 0-9 - _ characters. ]%>"
								/>
								<a href="javascript:void(0)" onclick="document.getElementById('<%=$this->APIOAuth2ClientId->ClientID%>').value = get_random_string('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_', 32); return false;"><%[ generate ]%></a>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIOAuth2ClientSecret" Text="<%[ OAuth2 Client Secret: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIOAuth2ClientSecret"
									CssClass="w3-input w3-border w3-show-inline-block"
									CausesValidation="false"
									MaxLength="50"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIOAuth2ClientSecret"
									ValidationGroup="OAuth2"
									Text="<%[ Please enter Client Secret. ]%>"
								/>
								<com:TRegularExpressionValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIOAuth2ClientSecret"
									RegularExpression="<%=OAuth2::CLIENT_SECRET_PATTERN%>"
									ValidationGroup="OAuth2"
									Text="<%[ Invalid Client Secret value. Client Secret may contain any character that is not a whitespace character. ]%>"
								/>
								<a href="javascript:void(0)" onclick="document.getElementById('<%=$this->APIOAuth2ClientSecret->ClientID%>').value = get_random_string('ABCDEFabcdef0123456789', 40); return false;"><%[ generate ]%></a>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIOAuth2RedirectURI" Text="<%[ OAuth2 Redirect URI (example: https://bacularis:9097/web/redirect): ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIOAuth2RedirectURI"
									CssClass="w3-input w3-border w3-show-inline-block"
									CausesValidation="false"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIOAuth2RedirectURI"
									ValidationGroup="OAuth2"
									Text="<%[ Please enter Redirect URI. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIOAuth2Scope" Text="<%[ OAuth2 scopes (space separated): ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIOAuth2Scope"
									CssClass="w3-input w3-border w3-show-inline-block"
									CausesValidation="false"
									TextMode="MultiLine"
									Width="370px"
								/>
								<a href="javascript:void(0)" onclick="set_scopes('<%=$this->APIOAuth2Scope->ClientID%>'); return false;" style="vertical-align: top"><%[ set all scopes ]%></a>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIOAuth2Scope"
									ValidationGroup="OAuth2"
									Text="<%[ Please enter OAuth2 scopes. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIOAuth2BconsoleCfgPath" Text="<%[ Dedicated Bconsole config file path: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIOAuth2BconsoleCfgPath"
									CssClass="w3-input w3-border w3-show-inline-block"
									CausesValidation="false"
									ValidationGroup="OAuth2"
									Width="370px"
								/> <%[ (optional) ]%>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIOAuth2Name" Text="<%[ Short name: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIOAuth2Name"
									CssClass="w3-input w3-border w3-show-inline-block"
									CausesValidation="false"
									Width="370px"
								/> <%[ (optional) ]%>
							</div>
						</div>
					</com:TPanel>
				</div>
				<h3 style="display: <%=$this->getFirstRun() ? 'block' : 'none'%>"><%[ Web interface settings ]%></h3>
				<div id="configure_web_auth" style="display: none">
					<com:TPanel Visible="<%=$this->getFirstRun()%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="WebLogin" Text="<%[ Administration login: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="WebLogin"
									CssClass="w3-input w3-border"
									CausesValidation="false"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="WebLogin"
									Text="<%[ Please enter login. ]%>"
								/>
								<com:TRegularExpressionValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="WebLogin"
									RegularExpression="<%=\Bacularis\Web\Modules\BasicWebUserConfig::USER_PATTERN%>"
									Text="<%[ Invalid login value. Login may contain a-z A-Z 0-9 characters. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="WebPassword" Text="<%[ Administration password: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="WebPassword"
									CssClass="w3-input w3-border"
									TextMode="Password"
									MaxLength="60"
									PersistPassword="true"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="WebPassword"
									Text="<%[ Please enter password. ]%>"
								/>
								<com:TRegularExpressionValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="WebPassword"
									RegularExpression="[\S\s]{5,60}"
									Text="<%[ Password must be longer than 4 chars. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="RetypeWebPassword" Text="<%[ Retype administration password: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="RetypeWebPassword"
									CssClass="w3-input w3-border"
									TextMode="Password"
									MaxLength="60"
									PersistPassword="true"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									ID="RetypeWebPasswordRequireValidator"
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="RetypeWebPassword"
									Text="<%[ Please enter retype password. ]%>"
								/>
								<com:TRegularExpressionValidator
									ID="RetypeWebPasswordRegexpValidator"
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="RetypeWebPassword"
									RegularExpression="[\S\s]{5,60}"
									Text="<%[ Password must be longer than 4 chars. ]%>"
								/>
								<com:TCustomValidator	
									ID="RetypeWebPasswordCustomValidator"
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="RetypeWebPassword"
									OnServerValidate="validateAdministratorPassword"
									Text="<%[ Passwords must be the same. ]%>"
								/>
							</div>
						</div>
					</div>
				</com:TPanel>
				<a href="javascript:void(0)" onclick="$('#configure_web_auth_adv').slideToggle('fast');" style="display: <%=$this->getFirstRun() && $this->EnableWeb->Checked ? 'block' : 'none'%>"><%[ Advanced options ]%></a>
				<div id="configure_web_auth_adv" style="display: none">
					<com:TPanel Visible="<%=$this->getFirstRun() && $this->EnableWeb->Checked%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIProtocol" Text="<%[ API Protocol: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TActiveDropDownList
									ID="APIProtocol"
									CssClass="w3-select w3-border"
									Width="150px"
									CausesValidation="false"
								>
									<com:TListItem Value="http" Text="HTTP" Selected="true" />
									<com:TListItem Value="https" Text="HTTPS"/>
								</com:TActiveDropDownList>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIHost" Text="<%[ API IP Address/Hostname: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIHost"
									CssClass="w3-input w3-border"
									CausesValidation="false"
									Width="370px"
								/>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIHost"
									Text="<%[ Field required. ]%>"
								/>
							</div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><com:TLabel ForControl="APIPort" Text="<%[ API Port: ]%>" /></div>
							<div class="w3-col w3-twothird">
								<com:TTextBox
									ID="APIPort"
									CssClass="w3-input w3-border"
									CausesValidation="false"
									Width="100px"
									Text="9097"
								/>
								<com:TRequiredFieldValidator
									CssClass="validator-block"
									Display="Dynamic"
									ControlCssClass="invalidate"
									ControlToValidate="APIPort"
									Text="<%[ Field required. ]%>"
								/>
							</div>
						</div>
					</com:TPanel>
				</div>
			</div>
			<script type="text/javascript">
				const is_web_authentication = function() {
					const set_creds = document.getElementById('<%=$this->SetAPICredentialsForWeb->ClientID%>');
					const auth_basic = document.getElementById('<%=$this->AuthBasic->ClientID%>');
					return (auth_basic.checked && set_creds && set_creds.checked);
				};
				const set_api_credentials_for_web = function() {
					const api_login = document.getElementById('<%=$this->APILogin->ClientID%>');
					const api_pwd = document.getElementById('<%=$this->APIPassword->ClientID%>');
					const web_login = document.getElementById('<%=$this->WebLogin->ClientID%>');
					const web_pwd = document.getElementById('<%=$this->WebPassword->ClientID%>');
					const web_pwd_re = document.getElementById('<%=$this->RetypeWebPassword->ClientID%>');
					if (is_web_authentication()){
						web_login.value = api_login.value;
						web_pwd.value = web_pwd_re.value = api_pwd.value;
					}
				}; 
				const wizard_validation = function() {
					var basic = document.getElementById('<%=$this->AuthBasic->ClientID%>');
					var oauth2 = document.getElementById('<%=$this->AuthOAuth2->ClientID%>');
					var validation_group;
					if (basic.checked === true) {
						validation_group = 'Basic';
					} else if (oauth2.checked === true) {
						validation_group = 'OAuth2';
					}
					var ret = true;
					if (Prado.Validation) {
						ret = Prado.Validation.validate(Prado.Validation.getForm(), validation_group);
					}
					return ret;
				}
				if (!is_web_authentication()) {
					$('#configure_web_auth').show();
				}
			</script>
		</com:TWizardStep>
		<com:TWizardStep ID="Step7" Title="<%[ Step 6 - Finish ]%>" StepType="Finish">
			<div class="w3-half" style="float: none; margin: auto">
				<fieldset>
					<legend><%[ Catalog API ]%></legend>
					<div style="display: <%=($this->DatabaseYes->Checked ? 'block' : 'none')%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Database type: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->getDbNameByType($this->DBType->SelectedValue)%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Database name: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->DBName->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Login: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? $this->Login->Text : '-'%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Password: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? preg_replace('/.{1}/', '*', $this->Password->Text) : '-'%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ IP address (or hostname): ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? $this->IP->Text : '-'%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Database port: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? $this->Port->Text : '-'%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Database file path (SQLite only): ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->isSQLiteType($this->DBType->SelectedValue) === true ? $this->DBPath->Text : '-'%></strong></div>
						</div>
					</div>
					<div style="display: <%=($this->DatabaseNo->Checked ? 'block' : 'none')%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Catalog access: ]%></div>
							<div class="w3-col w3-third"><strong><%[ Disabled ]%></strong></div>
						</div>
					</div>
				</fieldset>
				<fieldset>
					<legend><%[ Console API ]%></legend>
					<div style="display: <%=($this->ConsoleYes->Checked ? 'block' : 'none')%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Bconsole binary file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BconsolePath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Bconsole admin config file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BconsoleConfigPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Use sudo for bconsole requests: ]%></div>
							<div class="w3-col w3-third"><strong><%=($this->UseSudo->Checked === true) ? 'yes' : 'no'%></strong></div>
						</div>
						<div class="w3-row w3-section" style="display: <%=(!empty($this->BconsoleSudoRunAsUser->Text) ? 'block' : 'none')%>">
							<div class="w3-col w3-third"><%[ Sudo Runas user: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BconsoleSudoRunAsUser->Text%></strong></div>
						</div>
						<div class="w3-row w3-section" style="display: <%=(!empty($this->BconsoleSudoRunAsGroup->Text) ? 'block' : 'none')%>">
							<div class="w3-col w3-third"><%[ Sudo Runas group: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BconsoleSudoRunAsGroup->Text%></strong></div>
						</div>
					</div>
					<div style="display: <%=($this->ConsoleNo->Checked ? 'block' : 'none')%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Console access: ]%></div>
							<div class="w3-col w3-third"><strong><%[ Disabled ]%></strong></div>
						</div>
					</div>
				</fieldset>
				<fieldset>
					<legend><%[ Config API ]%></legend>
					<div style="display: <%=($this->ConfigYes->Checked ? 'block' : 'none')%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Directory path for new config files: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BConfigDir->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Use sudo for Bacula JSON tools: ]%></div>
							<div class="w3-col w3-third"><strong><%=($this->BJSONUseSudo->Checked === true) ? 'yes' : 'no'%></strong></div>
						</div>
						<div class="w3-row w3-section" style="display: <%=(!empty($this->BConfigSudoRunAsUser->Text) ? 'block' : 'none')%>">
							<div class="w3-col w3-third"><%[ Sudo Runas user: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BConfigSudoRunAsUser->Text%></strong></div>
						</div>
						<div class="w3-row w3-section" style="display: <%=(!empty($this->BConfigSudoRunAsGroup->Text) ? 'block' : 'none')%>">
							<div class="w3-col w3-third"><%[ Sudo Runas group: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BConfigSudoRunAsGroup->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ bdirjson binary file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BDirJSONPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Main Director config file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->DirCfgPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ bsdjson binary file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BSdJSONPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Main Storage Daemon config file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->SdCfgPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ bfdjson binary file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BFdJSONPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Main Client config file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->FdCfgPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ bbconsjson binary file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BBconsJSONPath->Text%></strong></div>
						</div>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Main Bconsole config file path: ]%></div>
							<div class="w3-col w3-third"><strong><%=$this->BconsCfgPath->Text%></strong></div>
						</div>
					</div>
					<div style="display: <%=($this->ConfigNo->Checked ? 'block' : 'none')%>">
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Config access: ]%></div>
							<div class="w3-col w3-third"><strong><%[ Disabled ]%></strong></div>
						</div>
					</div>
				</fieldset>
				<fieldset>
					<legend><%[ Authentication to Bacularis REST API ]%></legend>
					<div class="w3-row w3-section">
						<div class="w3-col w3-third"><%[ Authentication type: ]%></div>
						<div class="w3-col w3-third">
							<strong>
								<%=$this->AuthBasic->Checked ? 'HTTP Basic' : ''%>
								<%=$this->AuthOAuth2->Checked ? 'OAuth2' : ''%>
							</strong>
						</div>
					</div>
					<com:TPanel Visible="<%=$this->getFirstRun()%>">
						<div style="display: <%=$this->AuthBasic->Checked ? 'block' : 'none'%>">
							<div class="w3-row w3-section">
								<div class="w3-col w3-third"><%[ Administration login: ]%></div>
								<div class="w3-col w3-third"><strong><%=$this->APILogin->Text%></strong></div>
							</div>
							<div class="w3-row w3-section">
								<div class="w3-col w3-third"><%[ Administration password: ]%></div>
								<div class="w3-col w3-third"><strong><%=preg_replace('/.{1}/', '*', $this->APIPassword->Text)%></strong></div>
							</div>
						</div>
					</com:TPanel>
					<com:TPanel Visible="<%=($this->getFirstRun() || $this->getAddAuthParams())%>">
						<div style="display: <%=$this->AuthOAuth2->Checked ? 'block' : 'none'%>">
							<div class="w3-row w3-section">
								<div class="w3-col w3-third">Client ID:</div>
								<div class="w3-col w3-third"><strong><%=$this->APIOAuth2ClientId->Text%></strong></div>
							</div>
							<div class="w3-row w3-section">
								<div class="w3-col w3-third">Client Secret:</div>
								<div class="w3-col w3-third"><strong><%=preg_replace('/.{1}/', '*', $this->APIOAuth2ClientSecret->Text)%></strong></div>
							</div>
							<div class="w3-row w3-section">
								<div class="w3-col w3-third">Redirect URI:</div>
								<div class="w3-col w3-third"><strong><%=$this->APIOAuth2RedirectURI->Text%></strong></div>
							</div>
							<div class="w3-row w3-section">
								<div class="w3-col w3-third">Scope:</div>
								<div class="w3-col w3-third"><strong><%=$this->APIOAuth2Scope->Text%></strong></div>
							</div>
							<div class="w3-row w3-section">
								<div class="w3-col w3-third"><%[ Dedicated Bconsole config file path: ]%></div>
								<div class="w3-col w3-third"><strong><%=!empty($this->APIOAuth2BconsoleCfgPath->Text) ? $this->APIOAuth2BconsoleCfgPath->Text : '-'%></strong></div>
							</div>
						</div>
					</com:TPanel>
				</fieldset>
				<com:TPanel Visible="<%=$this->getFirstRun() && $this->EnableWeb->Checked%>">
					<fieldset>
						<legend><%[ Web interface authentication ]%></legend>
						<div class="w3-row w3-section">
							<div class="w3-col w3-third"><%[ Use the same credentials for the API and for the web interface ]%>:</div>
							<div class="w3-col w3-third">
								<strong>
									<%=$this->SetAPICredentialsForWeb->Checked ? \Prado::localize('Yes') : \Prado::localize('No')%>
								</strong>
							</div>
						</div>
						<div style="display: <%=$this->SetAPICredentialsForWeb->Checked ? 'none' : 'block'%>">
							<div class="w3-row w3-section">
								<div class="w3-col w3-third"><%[ Administration login: ]%></div>
								<div class="w3-col w3-third"><strong><%=$this->WebLogin->Text%></strong></div>
							</div>
							<div class="w3-row w3-section">
								<div class="w3-col w3-third"><%[ Administration password: ]%></div>
								<div class="w3-col w3-third"><strong><%=preg_replace('/.{1}/', '*', $this->WebPassword->Text)%></strong></div>
							</div>
						</div>
					</fieldset>
				</com:TPanel>
			</div>
		</com:TWizardStep>
	</com:TWizard>
	<com:Bacularis.API.Portlets.SudoConfig ID="SudoConfig" />
<script type="text/javascript">
var bjsontools_fields = {
	General: {
		data: [],
		test: [$('#<%=$this->BConfigDirTestOk->ClientID%>'), $('#<%=$this->BConfigDirTestErr->ClientID%>')]
	},
	Dir: {
		data: [$('#<%=$this->BDirJSONPath->ClientID%>'), $('#<%=$this->DirCfgPath->ClientID%>')],
		test: [$('#<%=$this->BDirJSONPathTestOk->ClientID%>'), $('#<%=$this->BDirJSONPathTestErr->ClientID%>')]
	},
	Sd: {
		data: [$('#<%=$this->BSdJSONPath->ClientID%>'), $('#<%=$this->SdCfgPath->ClientID%>')],
		test: [$('#<%=$this->BSdJSONPathTestOk->ClientID%>'), $('#<%=$this->BSdJSONPathTestErr->ClientID%>')]
	},
	Fd: {
		data: [$('#<%=$this->BFdJSONPath->ClientID%>'), $('#<%=$this->FdCfgPath->ClientID%>')],
		test: [$('#<%=$this->BFdJSONPathTestOk->ClientID%>'), $('#<%=$this->BFdJSONPathTestErr->ClientID%>')]
	},
	Bcons: {
		data: [$('#<%=$this->BBconsJSONPath->ClientID%>'), $('#<%=$this->BconsCfgPath->ClientID%>')],
		test: [$('#<%=$this->BBconsJSONPathTestOk->ClientID%>'), $('#<%=$this->BBconsJSONPathTestErr->ClientID%>')]
	}
};
var bjsontools_get_field_type = function(field_id) {
	var field_types = Object.keys(bjsontools_fields);
	var type, field_type;
	for (var i = 0; i < field_types.length; i++) {
		type = field_types[i];
		for (var j = 0; j < bjsontools_fields[type].data.length; j++) {
			if (bjsontools_fields[type].data[j][0].id === field_id) {
				field_type = type;
				break;
			}
		}
		if (field_type) {
			break;
		}
	}
	return field_type;
};
var bjsontools_validator = function(sender, parameter) {
	var validation_css = 'validation-error';
	var id_validating_field = sender.control.id;
	var type = bjsontools_get_field_type(id_validating_field);
	var invalid_fields = [];
	for (var i = 0; i < bjsontools_fields[type].data.length; i++) {
		bjsontools_fields[type].data[i].removeClass(validation_css);
		if (!bjsontools_fields[type].data[i][0].value) {
			invalid_fields.push(bjsontools_fields[type].data[i]);
		}
	}
	var valid = (invalid_fields.length === 0 || invalid_fields.length === bjsontools_fields[type].data.length);
	var is_validating_field_valid = true;
	if (!valid) {
		for (var i = 0; i < invalid_fields.length; i++) {
			invalid_fields[i].addClass(validation_css);
			if (invalid_fields[i][0].id === id_validating_field) {
				is_validating_field_valid = false;
			}
		}
		bjsontools_hide_test_results(type);
	}
	if (is_validating_field_valid === true) {
		valid = true;
	}

	return valid;
};

// if field_type not given then all test results become hidden
var bjsontools_hide_test_results = function(field_type) {
	var field_types = Object.keys(bjsontools_fields);
	var type;
	for (var i = 0; i < field_types.length; i++) {
		type = field_types[i];
		for (var j = 0; j < bjsontools_fields[type].test.length; j++) {
			if (!field_type || field_type === type) {
				bjsontools_fields[type].test[j].hide();
			}
		}
	}
};

var set_action_command_output = function(action, result) {
	var result_el = document.querySelector('#actions_test_result_' + action + ' .action_result');
	if (result.error === 0) {
		var success = document.querySelector('#actions_test_result_' + action + ' .action_success');
		success.style.display = '';
		result_el.textContent = '';
	} else {
		var error = document.querySelector('#actions_test_result_' + action + ' .action_error');
		error.style.display = '';
		result_el.innerHTML = '<br />' + result.output.join('<br />');
	}
};

var actions_hide_test_results = function(action) {
	var loader = document.querySelector('#actions_test_result_' + action + ' .action_test_loader');
	var success = document.querySelector('#actions_test_result_' + action + ' .action_success');
	var error = document.querySelector('#actions_test_result_' + action + ' .action_error');
	var result = document.querySelector('#actions_test_result_' + action + ' .action_result');
	loader.style.display = 'none';
	success.style.display = 'none'
	error.style.display = 'none';
	result.textContent = '';
};

var bin_fields = {
	bconsole: [
		'<%=$this->BconsolePath->ClientID%>'
	],
	config: [
		'<%=$this->BDirJSONPath->ClientID%>',
		'<%=$this->BSdJSONPath->ClientID%>',
		'<%=$this->BFdJSONPath->ClientID%>',
		'<%=$this->BBconsJSONPath->ClientID%>',
	]
};
oSudoConfig.set_bin_fields(bin_fields);
const bin_ownership = {
	bconsole: {
		user: '<%=$this->BconsoleSudoRunAsUser->ClientID%>',
		group: '<%=$this->BconsoleSudoRunAsGroup->ClientID%>'
	},
	config: {
		user: '<%=$this->BConfigSudoRunAsUser->ClientID%>',
		group: '<%=$this->BConfigSudoRunAsGroup->ClientID%>'
	}
};
oSudoConfig.set_bin_ownership(bin_ownership);
</script>
</com:TContent>
